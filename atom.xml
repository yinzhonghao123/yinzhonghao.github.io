<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>未卜的博客</title>
  
  <subtitle>code change the world !</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yinzhonghao123.github.io/"/>
  <updated>2018-03-23T06:31:54.274Z</updated>
  <id>https://yinzhonghao123.github.io/</id>
  
  <author>
    <name>未卜</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>移动端适配</title>
    <link href="https://yinzhonghao123.github.io/783ce8a9.html"/>
    <id>https://yinzhonghao123.github.io/783ce8a9.html</id>
    <published>2018-03-23T06:21:11.000Z</published>
    <updated>2018-03-23T06:31:54.274Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;#rem
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>highcharts图例控制</title>
    <link href="https://yinzhonghao123.github.io/87ef91f6.html"/>
    <id>https://yinzhonghao123.github.io/87ef91f6.html</id>
    <published>2018-03-22T10:18:12.000Z</published>
    <updated>2018-03-22T10:30:41.379Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;highcharts图表中图例的设置&lt;br&gt;这个主要是控制所有图例的设置&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://yinzhonghao123.github.io/tags/css/"/>
    
      <category term="js" scheme="https://yinzhonghao123.github.io/tags/js/"/>
    
      <category term="jquery" scheme="https://yinzhonghao123.github.io/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>盒模型</title>
    <link href="https://yinzhonghao123.github.io/fdff8ae1.html"/>
    <id>https://yinzhonghao123.github.io/fdff8ae1.html</id>
    <published>2018-03-20T02:07:10.000Z</published>
    <updated>2018-03-21T02:40:53.193Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;看到好多关于盒模型的东西上个图&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://yinzhonghao123.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>ES5 ES6 ES7</title>
    <link href="https://yinzhonghao123.github.io/4e6bf8ed.html"/>
    <id>https://yinzhonghao123.github.io/4e6bf8ed.html</id>
    <published>2018-03-19T10:27:41.000Z</published>
    <updated>2018-03-20T06:43:59.689Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;理解ES&quot;&gt;&lt;a href=&quot;#理解ES&quot; class=&quot;headerlink&quot; title=&quot;理解ES&quot;&gt;&lt;/a&gt;&lt;strong&gt;理解ES&lt;/strong&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;全称: ECMAScript&lt;/li&gt;
&lt;li&gt;js语言的规范&lt;/li&gt;
&lt;li&gt;我们用的js是它的实现&lt;/li&gt;
&lt;li&gt;js的组成&lt;ul&gt;
&lt;li&gt;ECMAScript(js基础)&lt;/li&gt;
&lt;li&gt;扩展–&amp;gt;浏览器端&lt;ul&gt;
&lt;li&gt;BOM&lt;/li&gt;
&lt;li&gt;DOM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;扩展–&amp;gt;服务器端&lt;ul&gt;
&lt;li&gt;Node.js&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://yinzhonghao123.github.io/tags/js/"/>
    
      <category term="es5" scheme="https://yinzhonghao123.github.io/tags/es5/"/>
    
      <category term="es6" scheme="https://yinzhonghao123.github.io/tags/es6/"/>
    
      <category term="es7" scheme="https://yinzhonghao123.github.io/tags/es7/"/>
    
  </entry>
  
  <entry>
    <title>haslayout</title>
    <link href="https://yinzhonghao123.github.io/4b8b97c0.html"/>
    <id>https://yinzhonghao123.github.io/4b8b97c0.html</id>
    <published>2018-03-13T02:14:51.000Z</published>
    <updated>2018-03-20T06:43:59.673Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是haslayout&quot;&gt;&lt;a href=&quot;#什么是haslayout&quot; class=&quot;headerlink&quot; title=&quot;什么是haslayout&quot;&gt;&lt;/a&gt;什么是haslayout&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;layout是windows IE的一个私有概念，它决定了元素如何对其内容定位和尺寸计算，
以及与其他元素的关系和相互作用。当一个元素“拥有布局”时，它会负责本身及其子元素的尺寸和定位。
而如果一个元素“没有拥有布局”，那么它的尺寸和位置由最近的拥有布局的祖先元素控制。

必须说明的是，IE8及以上浏览器使用了全新的显示引擎，已经不在使用haslayout属性，
因此haslayout属性只针对IE6和IE7。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://yinzhonghao123.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>重绘&amp;重排</title>
    <link href="https://yinzhonghao123.github.io/fa8505ef.html"/>
    <id>https://yinzhonghao123.github.io/fa8505ef.html</id>
    <published>2018-03-13T02:07:27.000Z</published>
    <updated>2018-03-20T06:51:28.774Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;重绘-Repaint&quot;&gt;&lt;a href=&quot;#重绘-Repaint&quot; class=&quot;headerlink&quot; title=&quot;重绘(Repaint)&quot;&gt;&lt;/a&gt;重绘(Repaint)&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;重绘是一个元素外观的改变所触发的浏览器行为，例如改变outline、背景色等属性。浏览器会根据元素的新属性重新绘制，
使元素呈现新的外观。重绘不会带来重新布局，所以并不一定伴随重排。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://yinzhonghao123.github.io/tags/css/"/>
    
      <category term="性能" scheme="https://yinzhonghao123.github.io/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>浏览器兼容性</title>
    <link href="https://yinzhonghao123.github.io/e475da6d.html"/>
    <id>https://yinzhonghao123.github.io/e475da6d.html</id>
    <published>2018-03-13T01:53:19.000Z</published>
    <updated>2018-03-20T06:34:52.256Z</updated>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;1.event事件对象兼容
    event=event||window.event
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://yinzhonghao123.github.io/tags/css/"/>
    
      <category term="js" scheme="https://yinzhonghao123.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js模块化</title>
    <link href="https://yinzhonghao123.github.io/7b21deb9.html"/>
    <id>https://yinzhonghao123.github.io/7b21deb9.html</id>
    <published>2018-03-09T10:15:43.000Z</published>
    <updated>2018-03-20T06:43:59.679Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;模块化的理解&lt;/li&gt;
&lt;li&gt;什么是模块?&lt;ul&gt;
&lt;li&gt;将一个复杂的程序依据一定的规则(规范)封装成几个块(文件), 并进行组合在一起&lt;/li&gt;
&lt;li&gt;块的内部数据/实现是私有的, 只是向外部暴露一些接口(方法)与外部其它模块通信&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一个模块的组成&lt;ul&gt;
&lt;li&gt;数据—&amp;gt;内部的变量&lt;/li&gt;
&lt;li&gt;操作数据的行为—&amp;gt;内部的函数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://yinzhonghao123.github.io/tags/js/"/>
    
      <category term="es5" scheme="https://yinzhonghao123.github.io/tags/es5/"/>
    
      <category term="es6" scheme="https://yinzhonghao123.github.io/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>css3 变量</title>
    <link href="https://yinzhonghao123.github.io/1023f277.html"/>
    <id>https://yinzhonghao123.github.io/1023f277.html</id>
    <published>2018-03-09T08:50:10.000Z</published>
    <updated>2018-03-21T02:40:53.190Z</updated>
    
    <summary type="html">
    
      css3 变量
    
    </summary>
    
    
      <category term="css" scheme="https://yinzhonghao123.github.io/tags/css/"/>
    
      <category term="css3" scheme="https://yinzhonghao123.github.io/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>js事件节流</title>
    <link href="https://yinzhonghao123.github.io/27adbae0.html"/>
    <id>https://yinzhonghao123.github.io/27adbae0.html</id>
    <published>2017-12-09T07:42:07.000Z</published>
    <updated>2018-03-21T02:40:53.187Z</updated>
    
    <summary type="html">
    
      js事件节流
    
    </summary>
    
    
      <category term="js" scheme="https://yinzhonghao123.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Vue中setTimeout值无效</title>
    <link href="https://yinzhonghao123.github.io/623e7efa.html"/>
    <id>https://yinzhonghao123.github.io/623e7efa.html</id>
    <published>2017-10-09T08:28:40.000Z</published>
    <updated>2018-03-21T02:40:53.191Z</updated>
    
    <summary type="html">
    
      解决Vue方法中setTimeout改变变量的值无效
    
    </summary>
    
    
      <category term="js" scheme="https://yinzhonghao123.github.io/tags/js/"/>
    
      <category term="vue" scheme="https://yinzhonghao123.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>属性描述符</title>
    <link href="https://yinzhonghao123.github.io/7130c1f7.html"/>
    <id>https://yinzhonghao123.github.io/7130c1f7.html</id>
    <published>2017-08-13T01:57:39.000Z</published>
    <updated>2018-03-21T02:40:53.195Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;对象属性的扩展&quot;&gt;&lt;a href=&quot;#对象属性的扩展&quot; class=&quot;headerlink&quot; title=&quot;对象属性的扩展&quot;&gt;&lt;/a&gt;对象属性的扩展&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;使用.的形式动态添加（不可指定属性描述符）
使用Object.defineProperty的形式来添加（可以指定属性描述符）
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://yinzhonghao123.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>BFC</title>
    <link href="https://yinzhonghao123.github.io/c5a97815.html"/>
    <id>https://yinzhonghao123.github.io/c5a97815.html</id>
    <published>2017-03-13T02:15:42.000Z</published>
    <updated>2018-03-21T02:40:53.185Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;在解释-BFC-是什么之前，需要先介绍-Box、Formatting-Context的概念。&quot;&gt;&lt;a href=&quot;#在解释-BFC-是什么之前，需要先介绍-Box、Formatting-Context的概念。&quot; class=&quot;headerlink&quot; title=&quot;在解释 BFC 是什么之前，需要先介绍 Box、Formatting Context的概念。&quot;&gt;&lt;/a&gt;在解释 BFC 是什么之前，需要先介绍 Box、Formatting Context的概念。&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;Box: CSS布局的基本单位
    Box 是 CSS 布局的对象和基本单位， 直观点来说，就是一个页面是由很多个 Box 组成的。
    元素的类型和 display 属性，决定了这个 Box 的类型。 不同类型的 Box， 会参与不同的 Formatting Context（一个决定如何渲染文档的容器），
    因此Box内的元素会以不同的方式渲染。让我们看看有哪些盒子：
        block-level box:
            display 属性为 block, list-item, table 的元素，会生成 block-level box。并且参与 block fomatting context；
        inline-level box:
            display 属性为 inline, inline-block, inline-table 的元素，会生成 inline-level box。
            并且参与 inline formatting context

Formatting context 　　
        Formatting context 是 W3C CSS2.1 规范中的一个概念。
        它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。
        最常见的 Formatting context 有 Block fomatting context (简称BFC)
                                    Inline formatting context (简称IFC)。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://yinzhonghao123.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>关于头像</title>
    <link href="https://yinzhonghao123.github.io/a3efbd8f.html"/>
    <id>https://yinzhonghao123.github.io/a3efbd8f.html</id>
    <published>2017-03-09T00:32:27.000Z</published>
    <updated>2018-03-21T02:40:53.177Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这个头像呢是因为孟二蛋才换的，看着喜庆，粗糙的表情😄&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://yinzhonghao123.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
